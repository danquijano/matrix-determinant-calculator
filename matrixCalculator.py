import streamlit as st
import numpy as np

# Estilos CSS para mejorar el dise√±o
st.markdown(
    """
    <style>
        .encabezado {
            background-color: #d4edda; /* Verde suave */
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            font-size: 16px;
            font-weight: bold;
            color: #155724;
        }
    </style>
    """,
    unsafe_allow_html=True
)

# Encabezado
st.markdown('<div class="encabezado">INTEGRANTES: Iker Fonseca, Yohana Hidalgo, Isaac Lazo, Daniela Quijano<br> Profesora J√©ssica Jim√©nez Moscoso | Proyecto - Algebra Lineal</div>', unsafe_allow_html=True)

# T√≠tulo de la aplicaci√≥n
st.title("Calculadora de Determinantes de Matrices")

# Secci√≥n: Informaci√≥n extra - Teor√≠a sobre Determinantes
st.header("‚ÑπÔ∏è Informaci√≥n extra: ¬øQu√© es un determinante?")
st.write("""
El determinante de una matriz es un valor escalar que proporciona informaci√≥n clave sobre las propiedades de la matriz.
Se calcula mediante operaciones como la regla de Sarrus (para matrices 3x3) o el m√©todo de eliminaci√≥n gaussiana.
         
**Definicion:**
""")

st.image("Determinante_Definicion.PNG", use_container_width=False, width=1200)

st.write("""**Propiedades clave:**
- Si el determinante es cero, la matriz es *singular* y no tiene inversa.
- El determinante cambia de signo si se intercambian filas.
- Multiplicar una fila por un n√∫mero multiplica el determinante por ese n√∫mero.
""")

# Secci√≥n: Informaci√≥n extra - Ejemplos de Determinantes
st.write("**Ejemplos:**")
st.image("Ejemplo1.jpg", caption="Ejemplo de matriz 2x2", use_container_width=False, width=350)

st.write("")

st.image("Ejemplo2.jpg", caption="Ejemplo de matriz 3x3", use_container_width=False, width=400)

# Instrucciones
st.subheader("üìù Instrucciones")
st.write("""
1. Ingresa el tama√±o de la matriz (n x n).
2. Llena los elementos de la matriz.
3. Haz clic en **Calcular Determinante** para obtener el resultado y ver el paso a paso.
""")

# Input para el tama√±o de la matriz
size = st.number_input("Ingresa el tama√±o de la matriz (n x n):", min_value=1, value=2, step=1)

# Generar din√°micamente los campos de entrada para la matriz
matrix = []
for i in range(size):
    st.write(f"**Fila {i+1}**")
    cols = st.columns(size)
    row = [cols[j].number_input(f"Fila {i+1}, Columna {j+1}", value=0.0, key=f"row_{i}_col_{j}") for j in range(size)]
    matrix.append(row)

st.write("### üßÆ Matriz ingresada:")
st.write(np.array(matrix))

def show_steps(matrix):
    st.subheader("üìä Paso a paso para calcular el determinante:")
    try:
        matrix = np.array(matrix, dtype=float)
        n = matrix.shape[0]
        det = 1
        for i in range(n):
            pivot = matrix[i, i]
            st.write(f"- Pivote en posici√≥n ({i+1}, {i+1}): {pivot:.2f}")
            if pivot == 0:
                st.error("El pivote es cero, lo que indica que el determinante es cero.")
                return 0
            det *= pivot
            for k in range(i+1, n):
                factor = matrix[k, i] / pivot
                st.write(f"  - Eliminando elementos debajo del pivote usando factor {factor:.2f}")
                matrix[k] -= factor * matrix[i]
            st.write(f"  - Matriz tras la eliminaci√≥n en la columna {i+1}:")
            st.write(matrix)
        return det
    except Exception as e:
        st.error(f"Error al mostrar los pasos: {e}")

# Bot√≥n para calcular el determinante
if st.button("Calcular Determinante"):
    try:
        matrix_array = np.array(matrix, dtype=float)
        if matrix_array.shape[0] != matrix_array.shape[1]:
            st.error("La matriz debe ser cuadrada (n x n).")
        else:
            determinant = show_steps(matrix_array)
            st.success(f"### ‚úÖ El determinante de la matriz es: {determinant:.2f}")
    except Exception as e:
        st.error(f"Error al calcular el determinante: {e}")